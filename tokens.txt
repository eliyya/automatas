Tipo: RESERVADA      Valor: package
Tipo: IDENTIFICADOR  Valor: com
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: tokens
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: import
Tipo: IDENTIFICADOR  Valor: java
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: io
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: File
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: import
Tipo: IDENTIFICADOR  Valor: java
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: io
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: FileNotFoundException
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: import
Tipo: IDENTIFICADOR  Valor: java
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: io
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: FileWriter
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: import
Tipo: IDENTIFICADOR  Valor: java
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: io
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: IOException
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: import
Tipo: IDENTIFICADOR  Valor: java
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: util
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: ArrayList
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: import
Tipo: IDENTIFICADOR  Valor: java
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: util
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: Scanner
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: public
Tipo: RESERVADA      Valor: class
Tipo: IDENTIFICADOR  Valor: App
Tipo: SEPARADOR      Valor: {
Tipo: RESERVADA      Valor: static
Tipo: RESERVADA      Valor: void
Tipo: IDENTIFICADOR  Valor: addToken
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: ArrayList
Tipo: OPERADOR       Valor: <
Tipo: IDENTIFICADOR  Valor: Token
Tipo: OPERADOR       Valor: >
Tipo: IDENTIFICADOR  Valor: tokens
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: Token
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: ,
Tipo: TIPO           Valor: boolean
Tipo: IDENTIFICADOR  Valor: semicolon
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: tokens
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: add
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: semicolon
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: tokens
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: add
Tipo: SEPARADOR      Valor: (
Tipo: RESERVADA      Valor: new
Tipo: IDENTIFICADOR  Valor: Token
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: ";"
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: TokenType
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: SEPARADOR
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: public
Tipo: RESERVADA      Valor: static
Tipo: RESERVADA      Valor: void
Tipo: IDENTIFICADOR  Valor: main
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: String
Tipo: SEPARADOR      Valor: [
Tipo: SEPARADOR      Valor: ]
Tipo: IDENTIFICADOR  Valor: args
Tipo: SEPARADOR      Valor: )
Tipo: RESERVADA      Valor: throws
Tipo: IDENTIFICADOR  Valor: IOException
Tipo: SEPARADOR      Valor: {
Tipo: RESERVADA      Valor: var
Tipo: IDENTIFICADOR  Valor: tokens
Tipo: OPERADOR       Valor: =
Tipo: RESERVADA      Valor: new
Tipo: IDENTIFICADOR  Valor: ArrayList
Tipo: OPERADOR       Valor: <
Tipo: IDENTIFICADOR  Valor: Token
Tipo: OPERADOR       Valor: >
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: args
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: length
Tipo: OPERADOR       Valor: ==
Tipo: LITERAL        Valor: 0
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: System
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: out
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: println
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "No se proporcionó ningún archivo. especifique la ruta del archivo como argumento."
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: return
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: try
Tipo: SEPARADOR      Valor: {
Tipo: RESERVADA      Valor: try
Tipo: SEPARADOR      Valor: (
Tipo: RESERVADA      Valor: var
Tipo: IDENTIFICADOR  Valor: file
Tipo: OPERADOR       Valor: =
Tipo: RESERVADA      Valor: new
Tipo: IDENTIFICADOR  Valor: Scanner
Tipo: SEPARADOR      Valor: (
Tipo: RESERVADA      Valor: new
Tipo: IDENTIFICADOR  Valor: File
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: args
Tipo: SEPARADOR      Valor: [
Tipo: LITERAL        Valor: 0
Tipo: SEPARADOR      Valor: ]
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: RESERVADA      Valor: var
Tipo: IDENTIFICADOR  Valor: comentarioMultiLinea
Tipo: OPERADOR       Valor: =
Tipo: RESERVADA      Valor: false
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: while
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: file
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: hasNext
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: RESERVADA      Valor: var
Tipo: IDENTIFICADOR  Valor: linea
Tipo: OPERADOR       Valor: =
Tipo: IDENTIFICADOR  Valor: file
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: nextLine
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: trim
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: var
Tipo: IDENTIFICADOR  Valor: semicolon
Tipo: OPERADOR       Valor: =
Tipo: RESERVADA      Valor: false
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: linea
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: isEmpty
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: var
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: =
Tipo: LITERAL        Valor: ""
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: var
Tipo: IDENTIFICADOR  Valor: lit
Tipo: OPERADOR       Valor: =
Tipo: RESERVADA      Valor: false
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: for
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: String
Tipo: IDENTIFICADOR  Valor: ch
Tipo: OPERADOR       Valor: :
Tipo: IDENTIFICADOR  Valor: linea
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: split
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: ""
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: lit
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: +=
Tipo: IDENTIFICADOR  Valor: ch
Tipo: SEPARADOR      Valor: ;
Tipo: TIPO           Valor: int
Tipo: IDENTIFICADOR  Valor: countBackslashes
Tipo: OPERADOR       Valor: =
Tipo: LITERAL        Valor: 0
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: OPERADOR       Valor: !
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: endsWith
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "\""
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: for
Tipo: SEPARADOR      Valor: (
Tipo: TIPO           Valor: int
Tipo: IDENTIFICADOR  Valor: i
Tipo: OPERADOR       Valor: =
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: length
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: -
Tipo: LITERAL        Valor: 2
Tipo: SEPARADOR      Valor: ;
Tipo: IDENTIFICADOR  Valor: i
Tipo: OPERADOR       Valor: >
Tipo: OPERADOR       Valor: =
Tipo: LITERAL        Valor: 0
Tipo: OPERADOR       Valor: &&
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: charAt
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: i
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: ==
Tipo: DESCONOCIDO    Valor: '\\'
Tipo: SEPARADOR      Valor: ;
Tipo: IDENTIFICADOR  Valor: i
Tipo: OPERADOR       Valor: --
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: countBackslashes
Tipo: OPERADOR       Valor: ++
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: countBackslashes
Tipo: OPERADOR       Valor: %
Tipo: LITERAL        Valor: 2
Tipo: OPERADOR       Valor: ==
Tipo: LITERAL        Valor: 0
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: +=
Tipo: LITERAL        Valor: " "
Tipo: SEPARADOR      Valor: ;
Tipo: IDENTIFICADOR  Valor: lit
Tipo: OPERADOR       Valor: =
Tipo: RESERVADA      Valor: false
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: ch
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: equals
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "\""
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: lit
Tipo: OPERADOR       Valor: =
Tipo: RESERVADA      Valor: true
Tipo: SEPARADOR      Valor: ;
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: +=
Tipo: LITERAL        Valor: " \""
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: ch
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: equals
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: ";"
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: +=
Tipo: LITERAL        Valor: " ; "
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: ch
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: equals
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "("
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: +=
Tipo: LITERAL        Valor: " ( "
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: ch
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: equals
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: ")"
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: +=
Tipo: LITERAL        Valor: " ) "
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: ch
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: equals
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "{"
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: +=
Tipo: LITERAL        Valor: " { "
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: ch
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: equals
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "}"
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: +=
Tipo: LITERAL        Valor: " } "
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: ch
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: equals
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "["
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: +=
Tipo: LITERAL        Valor: " [ "
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: ch
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: equals
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "]"
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: +=
Tipo: LITERAL        Valor: " ] "
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: ch
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: equals
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "<"
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: +=
Tipo: LITERAL        Valor: " < "
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: ch
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: equals
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: ">"
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: +=
Tipo: LITERAL        Valor: " > "
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: ch
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: equals
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "."
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: +=
Tipo: LITERAL        Valor: " . "
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: ch
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: equals
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: ","
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: +=
Tipo: LITERAL        Valor: " , "
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: ch
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: equals
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "!"
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: +=
Tipo: LITERAL        Valor: " ! "
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: +=
Tipo: IDENTIFICADOR  Valor: ch
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: endsWith
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "--"
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: =
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: substring
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: 0
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: length
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: -
Tipo: LITERAL        Valor: 2
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: +
Tipo: LITERAL        Valor: " -- "
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: endsWith
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "++"
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: OPERADOR       Valor: =
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: substring
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: 0
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: length
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: -
Tipo: LITERAL        Valor: 2
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: +
Tipo: LITERAL        Valor: " ++ "
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: SEPARADOR      Valor: }
Tipo: IDENTIFICADOR  Valor: linea
Tipo: OPERADOR       Valor: =
Tipo: IDENTIFICADOR  Valor: nuevaLinea
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: var
Tipo: IDENTIFICADOR  Valor: actualTokens
Tipo: OPERADOR       Valor: =
Tipo: IDENTIFICADOR  Valor: linea
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: trim
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: split
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "\\s+"
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: var
Tipo: IDENTIFICADOR  Valor: literal
Tipo: OPERADOR       Valor: =
Tipo: LITERAL        Valor: ""
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: for
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: String
Tipo: IDENTIFICADOR  Valor: token
Tipo: OPERADOR       Valor: :
Tipo: IDENTIFICADOR  Valor: actualTokens
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: trim
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: isEmpty
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: comentarioMultiLinea
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: endsWith
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "*/"
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: comentarioMultiLinea
Tipo: OPERADOR       Valor: =
Tipo: RESERVADA      Valor: false
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: literal
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: length
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: >
Tipo: LITERAL        Valor: 0
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: literal
Tipo: OPERADOR       Valor: +=
Tipo: LITERAL        Valor: " "
Tipo: OPERADOR       Valor: +
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: endsWith
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "\""
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: addToken
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: tokens
Tipo: SEPARADOR      Valor: ,
Tipo: RESERVADA      Valor: new
Tipo: IDENTIFICADOR  Valor: Token
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: literal
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: TokenType
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: LITERAL
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: semicolon
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: IDENTIFICADOR  Valor: literal
Tipo: OPERADOR       Valor: =
Tipo: LITERAL        Valor: ""
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: startsWith
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "//"
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: RESERVADA      Valor: break
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: startsWith
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "/*"
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: comentarioMultiLinea
Tipo: OPERADOR       Valor: =
Tipo: RESERVADA      Valor: true
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: break
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: Token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: reservadas
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: contains
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: addToken
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: tokens
Tipo: SEPARADOR      Valor: ,
Tipo: RESERVADA      Valor: new
Tipo: IDENTIFICADOR  Valor: Token
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: TokenType
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: RESERVADA
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: semicolon
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: Token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: operadores
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: contains
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: addToken
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: tokens
Tipo: SEPARADOR      Valor: ,
Tipo: RESERVADA      Valor: new
Tipo: IDENTIFICADOR  Valor: Token
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: TokenType
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: OPERADOR
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: semicolon
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: Token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: tipos
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: contains
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: addToken
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: tokens
Tipo: SEPARADOR      Valor: ,
Tipo: RESERVADA      Valor: new
Tipo: IDENTIFICADOR  Valor: Token
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: TokenType
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: TIPO
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: semicolon
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: Token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: separadores
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: contains
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: addToken
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: tokens
Tipo: SEPARADOR      Valor: ,
Tipo: RESERVADA      Valor: new
Tipo: IDENTIFICADOR  Valor: Token
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: TokenType
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: SEPARADOR
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: semicolon
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: startsWith
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "\""
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: literal
Tipo: OPERADOR       Valor: =
Tipo: LITERAL        Valor: "\""
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: var
Tipo: IDENTIFICADOR  Valor: ntoken
Tipo: OPERADOR       Valor: =
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: substring
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: 1
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: ntoken
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: endsWith
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "\""
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: addToken
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: tokens
Tipo: SEPARADOR      Valor: ,
Tipo: RESERVADA      Valor: new
Tipo: IDENTIFICADOR  Valor: Token
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: literal
Tipo: OPERADOR       Valor: +
Tipo: IDENTIFICADOR  Valor: ntoken
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: TokenType
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: LITERAL
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: semicolon
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: IDENTIFICADOR  Valor: literal
Tipo: OPERADOR       Valor: =
Tipo: LITERAL        Valor: ""
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: else
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: literal
Tipo: OPERADOR       Valor: +=
Tipo: IDENTIFICADOR  Valor: ntoken
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: equals
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "."
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: addToken
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: tokens
Tipo: SEPARADOR      Valor: ,
Tipo: RESERVADA      Valor: new
Tipo: IDENTIFICADOR  Valor: Token
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: TokenType
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: SEPARADOR
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: semicolon
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: matches
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "[0-9]+\\.?[0.9]*"
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: addToken
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: tokens
Tipo: SEPARADOR      Valor: ,
Tipo: RESERVADA      Valor: new
Tipo: IDENTIFICADOR  Valor: Token
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: TokenType
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: LITERAL
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: semicolon
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: if
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: matches
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "[a-zA-Z_$][a-zA-Z_$0-9]*"
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: addToken
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: tokens
Tipo: SEPARADOR      Valor: ,
Tipo: RESERVADA      Valor: new
Tipo: IDENTIFICADOR  Valor: Token
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: TokenType
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: IDENTIFICADOR
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: semicolon
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: continue
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: IDENTIFICADOR  Valor: addToken
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: tokens
Tipo: SEPARADOR      Valor: ,
Tipo: RESERVADA      Valor: new
Tipo: IDENTIFICADOR  Valor: Token
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: TokenType
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: DESCONOCIDO
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ,
Tipo: IDENTIFICADOR  Valor: semicolon
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: IDENTIFICADOR  Valor: System
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: out
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: println
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "Tokens encontrados: "
Tipo: OPERADOR       Valor: +
Tipo: IDENTIFICADOR  Valor: tokens
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: size
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: IDENTIFICADOR  Valor: System
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: out
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: println
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: RESERVADA      Valor: for
Tipo: SEPARADOR      Valor: (
Tipo: RESERVADA      Valor: var
Tipo: IDENTIFICADOR  Valor: token
Tipo: OPERADOR       Valor: :
Tipo: IDENTIFICADOR  Valor: tokens
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: System
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: out
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: println
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "Tipo: "
Tipo: OPERADOR       Valor: +
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: getTipo
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: equals
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: TokenType
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: DESCONOCIDO
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: ?
Tipo: IDENTIFICADOR  Valor: ConsoleColors
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: ANSI_RED
Tipo: OPERADOR       Valor: +
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: getTipo
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: +
Tipo: IDENTIFICADOR  Valor: ConsoleColors
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: ANSI_RESET
Tipo: OPERADOR       Valor: :
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: getTipo
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: equals
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: TokenType
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: LITERAL
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: ?
Tipo: IDENTIFICADOR  Valor: ConsoleColors
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: ANSI_GREEN
Tipo: OPERADOR       Valor: +
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: getTipo
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: +
Tipo: IDENTIFICADOR  Valor: ConsoleColors
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: ANSI_RESET
Tipo: OPERADOR       Valor: :
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: getTipo
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: equals
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: TokenType
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: IDENTIFICADOR
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: ?
Tipo: IDENTIFICADOR  Valor: ConsoleColors
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: ANSI_BLUE
Tipo: OPERADOR       Valor: +
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: getTipo
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: +
Tipo: IDENTIFICADOR  Valor: ConsoleColors
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: ANSI_RESET
Tipo: OPERADOR       Valor: :
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: getTipo
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: equals
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: TokenType
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: RESERVADA
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: ?
Tipo: IDENTIFICADOR  Valor: ConsoleColors
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: ANSI_PURPLE
Tipo: OPERADOR       Valor: +
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: getTipo
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: +
Tipo: IDENTIFICADOR  Valor: ConsoleColors
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: ANSI_RESET
Tipo: OPERADOR       Valor: :
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: getTipo
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: +
Tipo: LITERAL        Valor: " "
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: repeat
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: 15
Tipo: OPERADOR       Valor: -
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: getTipo
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: length
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: +
Tipo: LITERAL        Valor: "Valor: "
Tipo: OPERADOR       Valor: +
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: getValor
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: try
Tipo: SEPARADOR      Valor: (
Tipo: RESERVADA      Valor: var
Tipo: IDENTIFICADOR  Valor: log
Tipo: OPERADOR       Valor: =
Tipo: RESERVADA      Valor: new
Tipo: IDENTIFICADOR  Valor: FileWriter
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "tokens.txt"
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: RESERVADA      Valor: for
Tipo: SEPARADOR      Valor: (
Tipo: RESERVADA      Valor: var
Tipo: IDENTIFICADOR  Valor: token
Tipo: OPERADOR       Valor: :
Tipo: IDENTIFICADOR  Valor: tokens
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: log
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: write
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "Tipo: "
Tipo: OPERADOR       Valor: +
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: getTipo
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: +
Tipo: LITERAL        Valor: " "
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: repeat
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: 15
Tipo: OPERADOR       Valor: -
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: getTipo
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: length
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: +
Tipo: LITERAL        Valor: "Valor: "
Tipo: OPERADOR       Valor: +
Tipo: IDENTIFICADOR  Valor: token
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: getValor
Tipo: SEPARADOR      Valor: (
Tipo: SEPARADOR      Valor: )
Tipo: OPERADOR       Valor: +
Tipo: LITERAL        Valor: "\n"
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: catch
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: IOException
Tipo: IDENTIFICADOR  Valor: e
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: System
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: out
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: println
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "No se pudo escribir el archivo."
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: SEPARADOR      Valor: }
Tipo: SEPARADOR      Valor: }
Tipo: SEPARADOR      Valor: }
Tipo: RESERVADA      Valor: catch
Tipo: SEPARADOR      Valor: (
Tipo: IDENTIFICADOR  Valor: FileNotFoundException
Tipo: IDENTIFICADOR  Valor: e
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: {
Tipo: IDENTIFICADOR  Valor: System
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: out
Tipo: SEPARADOR      Valor: .
Tipo: IDENTIFICADOR  Valor: println
Tipo: SEPARADOR      Valor: (
Tipo: LITERAL        Valor: "No se encontró el archivo."
Tipo: SEPARADOR      Valor: )
Tipo: SEPARADOR      Valor: ;
Tipo: SEPARADOR      Valor: }
Tipo: SEPARADOR      Valor: }
Tipo: SEPARADOR      Valor: }
